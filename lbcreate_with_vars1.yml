---
-  name: Create and configure Azure Internal load balancer for SQL AOAG
   hosts: localhost
   gather_facts: false
   vars_files:
     - vars/lb_config_params.yml
   pre_tasks:
   - name: Get the load balancer details
     shell: "az network lb list --resource-group {{rg_name}} --query \"[?name=='{{ lb_name }}'] | length(@)\""
     register: check_lb_exist

   - name: Check Load Balancer exist before creating
     fail:
      msg: "Load balancer name {{ lb_name }} already exist so kindly check"
     when: check_lb_exist.stdout > "0"

   tasks:
   - name: Create and Configure Azure Internal Load Balancer
     block:
     - name: Create load balancer
       shell: " az network lb create --name {{ lb_name }}
                                     --resource-group {{ rg_name }}
                                     --backend-pool-name {{ bep_name }}
                                     --frontend-ip-name {{ default_fip_name }}
                                     --sku {{ sku_value }}
                                     --subnet {{ subnet_name }}  
                                     --vnet-name {{ vnet_name }}"
       register: create_lb_status

     - name: Check the status of Load Balancer creation
       debug:
         msg: "Azure internal load balancer created successfully"
       when: create_lb_status.rc == 0

     - name: Create and Configure frontend IP
       shell: "az network lb frontend-ip create --lb-name {{ lb_name }}
                                                --resource-group {{ rg_name }}
                                                --name {{ frontend_name }}
                                                --private-ip-address {{ private_ip_addr }}
                                                --zone {{ availability_zone }}
                                                --vnet-name {{ vnet_name }}
                                                --subnet {{ subnet_name }} "
       register: create_fip_status

     - name: Check the status of Frontend ip creation
       debug:
         msg: "Front End IP creation and configuration completed successfully"
       when: create_fip_status.rc == 0

     - name: Delete the deafult frontend IP created
       shell: "az network lb frontend-ip delete --lb-name {{ lb_name }}
                                                --resource-group {{ rg_name }}
                                                --name {{ default_fip_name }}"
       register: delete_default_fip_status

     - name: Check the status of default frontemd ip deletion
       debug:
         msg: "Default frontend IP deleted successfully"
       when: delete_default_fip_status.rc == 0

     - name: Create health probe
       shell: "az network lb probe create --lb-name {{ lb_name }}
                                          --name {{ probe_name }}
                                          --port {{ probe_port }}
                                          --protocol {{ protocol }}
                                          --resource-group {{ rg_name }}
                                          --interval {{ interval_value }}"
       register: create_hp_status

     - name: Check the status of Health Probe creation
       debug:
         msg: "Health probe created successfully"
       when: create_hp_status.rc == 0

     - name: Create load balancer rule
       shell: "az network lb rule create --resource-group {{ rg_name }}
                                         --lb-name {{ lb_name }}
                                         --name {{ rule_name }}
                                         --frontend-ip {{ frontend_name }}
                                         --backend-pool-name {{ bep_name }}
                                         --protocol {{ protocol }}
                                         --frontend-port {{ frontend_port }}
                                         --backend-port {{ backend_port }}
                                         --probe {{ probe_name }}
                                         --load-distribution {{ load_distribution }}
                                         --enable-tcp-reset {{ tcp_reset }}
                                         --enable-floating-ip {{ floating_ip }}"
       register: create_lbr_status

     - name: Check the status of load balancer rule creation
       debug:
         msg: "Load balancer rule created successfully"
       when: create_lbr_status.rc == 0

     - name: Add IP's to backend address pool
       shell: "az network lb address-pool address add --resource-group {{ rg_name }}
                                                      --lb-name {{ lb_name }}
                                                      --pool-name {{ bep_name }}
                                                      --name {{ item.backendAddr }}
                                                      --vnet {{ vnet_name }}
                                                      --ip-address {{ item.IP }}"
       register: create_bep_status
       with_items:
         - { backendAddr : "MyAddress1", IP : "10.0.0.4" }
         - { backendAddr : "MyAddress2", IP : "10.0.0.5" }

     - name: Check the status of backend pool
       debug:
         msg: "backend pool created and added IP's to them successfully"
       when: create_bep_status.results[0].rc == 0 and create_bep_status.results[1].rc == 0

     rescue:
     - name: Error Message
       debug:
         msg: "Error occured while creating and configuring azure internal load balancer"

     - name: Delete the partially created load balancer
       shell: "az network lb delete --name {{ lb_name }} --resource-group {{ rg_name }}"
       register: lb_delete_status

     - name: Check the load balancer deletion status
       debug:
         msg: "Partially created load balancer deleted successfully"
       when: lb_delete_status.rc == 0

